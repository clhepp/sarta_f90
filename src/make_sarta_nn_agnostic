#
# Makefile make_sarta for SARTA
#

ifdef OS
    uname_S := Windows
else
    uname_S := $(shell uname -s)
endif

uname_S := $(shell uname -s)

# ------------ Win -------------------------
ifeq ($(uname_S), Windows)
#	echo $(uname_S)
	target = app.exe
endif

# --------- Linux ---------------------------
ifeq ($(uname_S), Linux)
#	echo $(uname_S)
#    target = app
# HDF and RTP lib, inc
HDFLIB = -L/home/chepplew/myLibs/hdf4/lib -ldf -ljpeg -lz \
	-L/usr/local/lib/libsz.so.1 
RTPLIB = -L/home/chepplew/GitLib/rtp/lib -lrtp
RTPINC = -I/home/chepplew/GitLib/rtp/include
endif

# ---------- Mac ---------------------------
ifeq ($(uname_S), Darwin)
#	target = sarta
#	echo $(uname_S)
# HDF and RTP lib, inc
HDFLIB = -L/Users/chepplew/myLibs/hdf4/lib -ldf -ljpeg -lz \
	-L/usr/local/lib/ -lsz 
RTPLIB = -L/Users/chepplew/myLibs/rtp/lib -lrtp
RTPINC = -I/Users/chepplew/myLibs/rtp/include

.PHONY: main sarta

# ------------------------------------------------------------------------
# Object files
# ------------------------------------------------------------------------
OBJS =  rdinfo.o rdpref.o opnrtp.o rdcoef.o tunmlt.o rdsun.o rdrtp.o  \
	getbot.o mean_t.o read_nlte_ann.o calpar.o calowp.o calokw.o \
        calt1.o calt2.o calt3.o calt4.o calt5.o calt6.o calt7.o \
        sunpar.o faketz.o setems.o calrad.o calxnte_nn.o \
        wrtrtp.o util.o cbplev.o saconv.o vaconv.o qikexp.o main.o

OPT = -convert big_endian -extend-source 132 -check all -g -cpp -traceback -fp-stack-check -warn interface

F77 = gfortran
FCFLAGS =  -fdec-structure -fconvert=swap  -fcheck=all -g

# ------------------------------------------------------------------------
# Build
# ------------------------------------------------------------------------
sarta:	$(OBJS)
	$(F77) $(OBJS) $(RTPLIB) $(HDFLIB) $(FLIB)

# Compile source to object files
%.o : %.f90
	$(F77) $(FCFLAGS) $(RTPINC) -c $*.f90

endif


# ------------------------------------------------------------------------
# UMBC HDF LIBS
# ------------------------------------------------------------------------
#HDFLIB = -L/home/chepplew/Lib/lib -ldf -ljpeg -lz \
#         -L/usr/local/lib/libsz.so.1 
# -lsz

# ------------------------------------------------------------------------
# RTP LIB and INCLUDE
# ------------------------------------------------------------------------
#RTPLIB = -L/home/chepplew/GitLib/rtp/lib -lrtp
#RTPINC = -I/home/chepplew/GitLib/rtp/include

# ------------------------------------------------------------------------
# Compilers
# ------------------------------------------------------------------------

# INTEL ifort F77
# ------------------------------------------------------------------------
#F77 = ifort
FLIB = 
# to help debug:
#OPT = -convert big_endian -extend-source 132 -check all -g -cpp -traceback -fp-stack-check -warn interface
# regular build for running
# #OPT = -O2 -convert big_endian -extend-source 132 

# gfortran
# ------------------------------------------------------------------------
#F77 = gfortran
#FCFLAGS =  -fdec-structure -fconvert=swap  -fcheck=all -g
#OPT = -O2 -fconvert=swap

# ------------
# JPL Linux absoft: 
#    -s    static allocation
#    -N26  read big-endian binary files (needed for coefficient files)
#OPT = -s -O1 -N26
# Absoft requires the U77 library
#FLIB = -lU77
#F77 = /opt/absoft11.5/bin/f90

# Portland Group F77:
# ------------------------------------------------------------------------
#    -byteswapio  read big-endian binary files (needed for coefficient files)
#    -C           array bounds checking
#    -g           include symbol table info
#    -O           moderate optimization
#OPT = -O -byteswapio
#F77 = pgf77

# ------------------------------------------------------------------------
# Build
# ------------------------------------------------------------------------
#sarta:	$(OBJS)
#	$(F77) $(OBJS) $(RTPLIB) $(HDFLIB) $(FLIB)

# Compile source to object files
#%.o : %.f90
#	$(F77) $(FCFLAGS) $(RTPINC) -c $*.f90
##  $@ $< 

### $*.f90
